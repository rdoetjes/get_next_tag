# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

stages:
  - stage: Build
    displayName: "Build git_next_tag"
    jobs:
      #Test and build for Linux, Windows and MacOS
      - job: build
        displayName: "Test and build"
        strategy:
          #Use the following Azure build agents and set the os variable (used in artifact name)
          matrix:
            linux:
              imageName: 'ubuntu-latest'
              os: "lin"
            mac:
              imageName: 'macOS-latest'
              os: "mac"
            windows:
              imageName: 'windows-latest'
              os: "win"
        #Use the Azure vmImage to build the solution
        pool: 
          vmImage: $(imageName)

        steps: 
          #INSTALLS RUST then runs: cargo test, cargo build --release
          - template: pipeline-templates/rust-build.yml

          #Copy the binaries to this artifact staging directory called: <os>/<binary>
          - task: CopyFiles@2
            condition: succeeded()
            displayName: "Copy binaries only"
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/target/release/'
              Contents: |
                get_next_tag
                get_next_tag.exe
              TargetFolder: '$(Build.ArtifactStagingDirectory)/'

          #Build the artifect for each os. Name the artidact replace-<os>
          - task: PublishBuildArtifacts@1
            displayName: "Package artifact"
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: git_next_tag-$(os)
              publishLocation: 'Container'